language: python

python:
  - "2.7"

cache:
  directories:
    - $HOME/.cache
    - $HOME/build/girder_testing_build/store
    - $HOME/build/girder_testing_build/data

# sudo: false
sudo: required

dist: trusty

compiler:
  - gcc

env:
  global:
    - secure: "JhafeEylid0HWLgZlPG7MhIXf4M8WBB2LjQm/MKE8Kk7jHChVy/v9/TNJx26K50S4LGF77sCt4UON8BmErlsQZdWMzXKt9RQE5f8DZ1ImiV3Hsu/c5/CqTddPNgNNnRygRb/rphE0IUHECmQ74epbWu3+I7YhhP7dWQNWPwWAkcbkcCQk01ippfqt91yUSqxm/sFQfb11eQY/37hR655nVCuK/pCIAjpDsocV7wvQKOctLaBvwqF+9nqDe1DuXHmmhz0qeqZ7ODuQ5tzP+5qc3hR5zu8KEWzGvG9QAHKlrCC3Ukasl3Kv/KyLY8wwIRC7sukZ7g1r22NReuinq3odw/NaEFZ+cJ3LsuwxfYqxTf2i1Ibf1Z7GdGAcoHGUCSXjlmE+MdvxyrvzVYRxXnlkoxGbE1dR4MdqE6rf+ZBwcjnMwjNVB9hIX3jmjC4iu1T8tYuaVbxzLfKP8K0zfYfLCem1zdR0tNahcevdFbmKozfNu755zRZ2CagCHB+6MsHt39aiqJS1M0IwX2i6r3zujjy92zrkuvZ9Yu1+npjF6retCtRQedrTzQwztUJGeS5DuTojCA5iaMoeOL4XqFBQMGejYjT33FCnhd17Fd3rlgdxqdgLUO9pEda0YwxdODfIiOGUJTawKSEBNcuG3UXW5dfRqJ4vPxyo8mC6bWmLCI="

addons:
  apt:
    packages:
      # Pillow dependencies (see
      # https://pillow.readthedocs.org/en/latest/installation.html)
      - libtiff5-dev
      - libjpeg8-dev
      - zlib1g-dev
      - libfreetype6-dev
      - liblcms2-dev
      - libwebp-dev
      - tcl8.6-dev
      - tk8.6-dev
      - python-tk
      # vips
      - libvips-tools
      # openjpeg
      - libglib2.0-dev
      - libjpeg-dev
      - libxml2-dev
      - libpng12-dev
      # openslide
      - autoconf
      - automake
      - libtool
      - pkg-config
      - libcairo2-dev
      - libgdk-pixbuf2.0-dev
      - libxml2-dev
      - libsqlite3-dev
      # girder worker
      - rabbitmq-server

services:
  - rabbitmq

before_install:
  - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi
  - if [ -n "${PY3}" ]; then export MONGO_VERSION=3.0.7; export PY_COVG="OFF"; else export MONGO_VERSION=2.6.11; export PY_COVG="ON"; export DEPLOY=true; fi
  - GIRDER_VERSION=24b633385145f166fa34f651f0c036d334f71321
  - GIRDER_WORKER_VERSION=2730afb8585911bce1870c528c9453d20fc89c0b
  - main_path=$PWD
  - build_path=$PWD/build
  - mkdir -p $build_path

  - nvm install v5
  - npm install -g npm

  - girder_path=$build_path/girder
  - rm -fr $girder_path
  - git clone https://github.com/girder/girder.git $girder_path && git -C $girder_path checkout $GIRDER_VERSION
  - ln -sf $main_path $girder_path/plugins/
  - ls -l $girder_path/plugins

  - CACHE=$HOME/.cache CMAKE_VERSION=3.4.3 CMAKE_SHORT_VERSION=3.4 source $girder_path/scripts/install_cmake.sh
  - cmake --version

  # There is an issue with the OpenJPEG library included with Ubuntu 14.04,
  # so install it from source.
  - cd $build_path
  # - wget -O openjpeg-2.1.tar.gz https://github.com/uclouvain/openjpeg/archive/version.2.1.tar.gz
  # - tar -zxf openjpeg-2.1.tar.gz
  # - cd openjpeg-version.2.1
  - wget -O openjpeg-1.5.2.tar.gz https://github.com/uclouvain/openjpeg/archive/version.1.5.2.tar.gz
  - tar -zxf openjpeg-1.5.2.tar.gz
  - cd openjpeg-version.1.5.2
  - cmake .
  - make -j 3
  - sudo make install
  - sudo ldconfig
  - cd $main_path

  # Build libtiff so it will use our openjpeg
  - cd $build_path
  - wget http://download.osgeo.org/libtiff/tiff-4.0.3.tar.gz
  - tar -zxf tiff-4.0.3.tar.gz
  - cd tiff-4.0.3
  - ./configure
  - make -j 3
  - sudo make install
  - sudo ldconfig
  - cd $main_path

  # Build OpenSlide ourselves so that it will use our libtiff
  - cd $build_path
  - wget -O openslide-3.4.1.tar.gz https://github.com/openslide/openslide/archive/v3.4.1.tar.gz
  - tar -zxf openslide-3.4.1.tar.gz
  - cd openslide-3.4.1
  - autoreconf -i
  - ./configure
  - make -j 3
  - sudo make install
  - sudo ldconfig
  - cd $main_path

  - girder_worker_path=$girder_path/plugins/girder_worker
  - git clone https://github.com/girder/girder_worker.git $girder_worker_path && git -C $girder_worker_path checkout $GIRDER_WORKER_VERSION
  - cp $PWD/plugin_tests/test_files/girder_worker.cfg $girder_worker_path/girder_worker/worker.local.cfg
  - pip install --no-cache-dir -U -r $girder_worker_path/requirements.txt -r $girder_worker_path/girder_worker/plugins/girder_io/requirements.txt

  - export MONGO_VERSION=3.0.7
  - export PY_COVG="ON"
  - CACHE=$HOME/.cache source $girder_path/scripts/install_mongo.sh
  - mkdir /tmp/db
  - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
  - mongod --version

  - npm install -g npm
  - npm --version

  - pip install --no-cache-dir -U pip virtualenv

  - pip install --no-cache-dir numpy==1.10.2  # needed because libtiff doesn't install correctly without it.  This ensures we have the same version for libtiff as for the project.

install:
  - cd $girder_path
  - pip install --no-cache-dir -U -r requirements.txt -r requirements-dev.txt -e .
  - pip install -r $main_path/requirements.txt -e .
  - python -c "import openslide;print openslide.__version__"
  - npm install
  - pip install girder-client
  - BABEL_ENV=cover girder-install web --plugins=large_image,worker,jobs --dev
  - girder-cli --api-key $GIRDER_API_KEY --api-url https://data.kitware.com/api/v1 upload 580e34768d777f10f26ed5e4 clients/web/static/built

script:
  - cd $girder_worker_path
  - python -m girder_worker >/tmp/worker.out 2>&1 &
  - mkdir -p $build_path/girder_testing_build
  - cd $build_path/girder_testing_build
  - cmake -DPYTHON_COVERAGE:BOOL=${PY_COVG} -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} -DCOVERAGE_MINIMUM_PASS=80 -DJS_COVERAGE_MINIMUM_PASS=9 -DRUN_CORE_TESTS:BOOL="OFF" -DTEST_PLUGINS:STRING="large_image" $girder_path
  - make -j 3
  - JASMINE_TIMEOUT=15000 ctest -VV

after_failure:
  # On failures, show girder's error long and the worker output
  - cat /tmp/worker.out
